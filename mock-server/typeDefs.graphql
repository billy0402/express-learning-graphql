scalar DateTime

enum PhotoCategory {
  SELFIE
  PORTRAIT
  ACTION
  LANDSCAPE
  GRAPHIC
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  githubLogin: ID!
  name: String
  avatar: String
  postedPhotos: [Photo!]!
  inPhotos: [Photo!]!
}

# 加入 Photo 型態定義
type Photo {
  id: ID!
  url: String!
  name: String!
  description: String
  category: PhotoCategory!
  postedBy: User!
  taggedUsers: [User!]!
  created: DateTime!
}

input PostPhotoInput {
  name: String!
  description: String
  category: PhotoCategory = PORTRAIT
  file: Upload!
}

# 從 allPhotos 回傳 Photo
type Query {
  me: User
  totalPhotos: Int!
  allPhotos: [Photo!]!
  totalUsers: Int!
  allUsers: [User!]!
}

# 從 mutation 回傳新貼出的照片
type Mutation {
  # https://github.com/login/oauth/authorize?client_id=YOUR-ID-HERE&scope=user
  githubAuth(code: String!): AuthPayload!
  addFakeUsers(count: Int = 1): [User!]!
  fakeUserAuth(githubLogin: ID!): AuthPayload!
  postPhoto(input: PostPhotoInput!): Photo!
}

type Subscription {
  newPhoto: Photo!
  newUser: User!
}
